-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema IEC_IND
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `Design`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Design` ;

CREATE TABLE IF NOT EXISTS `Design` (
  `IdDesign` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(180) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `Code` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IdDesign`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `Reference_UNIQUE` ON `Design` (`Code` ASC);


-- -----------------------------------------------------
-- Table `Bom`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Bom` ;

CREATE TABLE IF NOT EXISTS `Bom` (
  `IdBOM` INT(11) NOT NULL AUTO_INCREMENT,
  `FK_Design` INT NOT NULL,
  PRIMARY KEY (`IdBOM`),
  CONSTRAINT `fk_Bom_Design1`
    FOREIGN KEY (`FK_Design`)
    REFERENCES `Design` (`IdDesign`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Bom_Design1_idx` ON `Bom` (`FK_Design` ASC);


-- -----------------------------------------------------
-- Table `Cell`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Cell` ;

CREATE TABLE IF NOT EXISTS `Cell` (
  `IdCell` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `FK_Line` INT NOT NULL,
  PRIMARY KEY (`IdCell`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Cell_Line1_idx` ON `Cell` (`FK_Line` ASC);


-- -----------------------------------------------------
-- Table `Client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Client` ;

CREATE TABLE IF NOT EXISTS `Client` (
  `IdClient` INT NOT NULL AUTO_INCREMENT,
  `FK_Organization` INT NULL,
  `Name` VARCHAR(60) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `Code` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IdClient`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `Reference_UNIQUE` ON `Client` (`Code` ASC);

CREATE INDEX `fk_Client_Organizations1_idx` ON `Client` (`FK_Organization` ASC);


-- -----------------------------------------------------
-- Table `Group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Group` ;

CREATE TABLE IF NOT EXISTS `Group` (
  `IdGroup` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdGroup`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8


-- -----------------------------------------------------
-- Table `PartState`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PartState` ;

CREATE TABLE IF NOT EXISTS `PartState` (
  `IdState` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IdState`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Part`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Part` ;

CREATE TABLE IF NOT EXISTS `Part` (
  `IdPart` INT(11) NOT NULL AUTO_INCREMENT,
  `FK_Design` INT NOT NULL,
  `FK_State` INT NOT NULL DEFAULT 1,
  `Name` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdPart`),
  CONSTRAINT `fk_Part_Design1`
    FOREIGN KEY (`FK_Design`)
    REFERENCES `Design` (`IdDesign`),
  CONSTRAINT `fk_Part_PartState1`
    FOREIGN KEY (`FK_State`)
    REFERENCES `PartState` (`IdState`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Part_Design1_idx` ON `Part` (`FK_Design` ASC);

CREATE INDEX `fk_Part_PartState1_idx` ON `Part` (`FK_State` ASC);


-- -----------------------------------------------------
-- Table `Input`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Input` ;

CREATE TABLE IF NOT EXISTS `Input` (
  `IdBOM` INT(11) NOT NULL AUTO_INCREMENT,
  `IdPart` INT(11) NOT NULL,
  `Quantity` INT(11) NOT NULL,
  PRIMARY KEY (`IdBOM`, `IdPart`),
  CONSTRAINT `FK_Inputs_BOM`
    FOREIGN KEY (`IdBOM`)
    REFERENCES `Bom` (`IdBOM`),
  CONSTRAINT `FK_Inputs_Part`
    FOREIGN KEY (`IdPart`)
    REFERENCES `Part` (`IdPart`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_BOM_has_Parts1_Parts1_idx` ON `Input` (`IdPart` ASC);

CREATE INDEX `fk_BOM_has_Parts1_BOM1_idx` ON `Input` (`IdBOM` ASC);


-- -----------------------------------------------------
-- Table `LineType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LineType` ;

CREATE TABLE IF NOT EXISTS `LineType` (
  `IdLineType` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(60) NOT NULL,
  `Active` BIT(1) NOT NULL,
  PRIMARY KEY (`IdLineType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Line`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Line` ;

CREATE TABLE IF NOT EXISTS `Line` (
  `IdLine` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `FK_Plant` INT NOT NULL,
  `FK_Group` INT NOT NULL,
  `FK_LineType` INT NOT NULL,
  PRIMARY KEY (`IdLine`),
  CONSTRAINT `fk_Line_LineType1`
    FOREIGN KEY (`FK_LineType`)
    REFERENCES `LineType` (`IdLineType`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Line_Plant1_idx` ON `Line` (`FK_Plant` ASC);

CREATE INDEX `fk_Line_Group1_idx` ON `Line` (`FK_Group` ASC);

CREATE INDEX `fk_Line_LineType1_idx` ON `Line` (`FK_LineType` ASC);


-- -----------------------------------------------------
-- Table `Organization`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Organization` ;

CREATE TABLE IF NOT EXISTS `Organization` (
  `IdOrganization` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(120) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdOrganization`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `idOrganizations_UNIQUE` ON `Organization` (`IdOrganization` ASC);

CREATE UNIQUE INDEX `Name_UNIQUE` ON `Organization` (`Name` ASC);


-- -----------------------------------------------------
-- Table `Output`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Output` ;

CREATE TABLE IF NOT EXISTS `Output` (
  `IdBOM` INT NOT NULL AUTO_INCREMENT,
  `IdPart` INT NOT NULL,
  `Quantity` INT NOT NULL,
  PRIMARY KEY (`IdBOM`, `IdPart`),
  CONSTRAINT `FK_Outputs_BOM`
    FOREIGN KEY (`IdBOM`)
    REFERENCES `Bom` (`IdBOM`),
  CONSTRAINT `FK_Outputs_Part`
    FOREIGN KEY (`IdPart`)
    REFERENCES `Part` (`IdPart`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin
COMMENT = ' ';

CREATE INDEX `FK_Outputs_IdBom_Idx` ON `Output` (`IdPart` ASC);

CREATE INDEX `FK_Outputs_IdPart_Idx` ON `Output` (`IdBOM` ASC);


-- -----------------------------------------------------
-- Table `Permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Permission` ;

CREATE TABLE IF NOT EXISTS `Permission` (
  `IdPermission` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(20) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `Expression` VARCHAR(255) NOT NULL,
  `Description` VARCHAR(180) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdPermission`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;


-- -----------------------------------------------------
-- Table `Contact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Contact` ;

CREATE TABLE IF NOT EXISTS `Contact` (
  `IdContact` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IdContact`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Personal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Personal` ;

CREATE TABLE IF NOT EXISTS `Personal` (
  `IdPersonal` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(80) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `FK_Organization` INT NULL,
  `FK_Contact` INT NULL,
  PRIMARY KEY (`IdPersonal`),
  CONSTRAINT `fk_Personal_Contacts1`
    FOREIGN KEY (`FK_Contact`)
    REFERENCES `Contact` (`IdContact`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Personal_Organizations1_idx` ON `Personal` (`FK_Organization` ASC);

CREATE INDEX `fk_Personal_Contacts_idx` ON `Personal` (`FK_Contact` ASC);


-- -----------------------------------------------------
-- Table `Plant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Plant` ;

CREATE TABLE IF NOT EXISTS `Plant` (
  `IdPlant` INT NOT NULL AUTO_INCREMENT,
  `FK_Organization` INT NOT NULL,
  `FK_Location` INT NULL,
  `Name` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdPlant`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Plant_Organization1_idx` ON `Plant` (`FK_Organization` ASC);


-- -----------------------------------------------------
-- Table `Project`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Project` ;

CREATE TABLE IF NOT EXISTS `Project` (
  `IdProject` INT NOT NULL AUTO_INCREMENT,
  `FK_Client` INT NOT NULL,
  `Name` VARCHAR(180) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `Code` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IdProject`),
  CONSTRAINT `fk_Project_Client`
    FOREIGN KEY (`FK_Client`)
    REFERENCES `Client` (`IdClient`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `IdProject_UNIQUE` ON `Project` (`IdProject` ASC);

CREATE UNIQUE INDEX `Reference_UNIQUE` ON `Project` (`Code` ASC);

CREATE INDEX `fk_Project_Client_idx` ON `Project` (`FK_Client` ASC);


-- -----------------------------------------------------
-- Table `Role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Role` ;

CREATE TABLE IF NOT EXISTS `Role` (
  `IdRole` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(60) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `Description` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdRole`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE UNIQUE INDEX `Name_UNIQUE` ON `Role` (`Name` ASC);


-- -----------------------------------------------------
-- Table `RolePermission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `RolePermission` ;

CREATE TABLE IF NOT EXISTS `RolePermission` (
  `IdRole` INT NOT NULL,
  `IdPermission` INT NOT NULL,
  `GrantedType` TINYINT(4) NOT NULL,
  PRIMARY KEY (`IdRole`, `IdPermission`),
  CONSTRAINT `FK_RolePermissions_Permissions`
    FOREIGN KEY (`IdPermission`)
    REFERENCES `Permission` (`IdPermission`),
  CONSTRAINT `FK_RolePermissions_Roles`
    FOREIGN KEY (`IdRole`)
    REFERENCES `Role` (`IdRole`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_UserGroups_has_Permisions_Permisions1_idx` ON `RolePermission` (`IdPermission` ASC);

CREATE INDEX `fk_UserGroups_has_Permisions_UserGroups1_idx` ON `RolePermission` (`IdRole` ASC);


-- -----------------------------------------------------
-- Table `SEQUENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SEQUENCE` ;

CREATE TABLE IF NOT EXISTS `SEQUENCE` (
  `KeyVal` VARCHAR(255) NOT NULL,
  `Value` BIGINT(20) NULL DEFAULT NULL,
  PRIMARY KEY (`KeyVal`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `Station`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Station` ;

CREATE TABLE IF NOT EXISTS `Station` (
  `IdStation` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  `FK_Cell` INT NOT NULL,
  PRIMARY KEY (`IdStation`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Stations_Cell1_idx` ON `Station` (`FK_Cell` ASC);


-- -----------------------------------------------------
-- Table `Toolset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Toolset` ;

CREATE TABLE IF NOT EXISTS `Toolset` (
  `IdToolset` INT(11) NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(50) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdToolset`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;


-- -----------------------------------------------------
-- Table `AccountStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AccountStatus` ;

CREATE TABLE IF NOT EXISTS `AccountStatus` (
  `IdStatus` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`IdStatus`));


-- -----------------------------------------------------
-- Table `Realm`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Realm` ;

CREATE TABLE IF NOT EXISTS `Realm` (
  `IdRealm` INT NOT NULL,
  `Name` VARCHAR(30) NOT NULL,
  `HasAuth` BIT(1) NOT NULL,
  PRIMARY KEY (`IdRealm`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Account`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Account` ;

CREATE TABLE IF NOT EXISTS `s`.`Account` (
  `IdAccount` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(60) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
  PRIMARY KEY (`IdAccount`),
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;




-- -----------------------------------------------------
-- Table `AccountPermission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AccountPermission` ;

CREATE TABLE IF NOT EXISTS `AccountPermission` (
  `IdAccount` INT NOT NULL,
  `IdPermission` INT NOT NULL,
  `GrantedType` TINYINT(4) NOT NULL,
  PRIMARY KEY (`IdAccount`, `IdPermission`),
  CONSTRAINT `FK_UserPermissions_Permissions`
    FOREIGN KEY (`IdPermission`)
    REFERENCES `Permission` (`IdPermission`),
  CONSTRAINT `FK_UserPermissions_Accounts`
    FOREIGN KEY (`IdAccount`)
    REFERENCES `Account` (`IdAccount`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Users_has_Permisions_Permisions1_idx` ON `AccountPermission` (`IdPermission` ASC);

CREATE INDEX `fk_Users_has_Permisions_Users1_idx` ON `AccountPermission` (`IdAccount` ASC);


-- -----------------------------------------------------
-- Table `AccountRole`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AccountRole` ;

CREATE TABLE IF NOT EXISTS `AccountRole` (
  `IdAccount` INT NOT NULL,
  `IdRole` INT NOT NULL,
  `IdRealm` INT NOT NULL,
  `GrantedType` TINYINT(4) NOT NULL,
  PRIMARY KEY (`IdAccount`, `IdRole`, `IdRealm`),
  CONSTRAINT `FK_UserRoles_Accounts`
    FOREIGN KEY (`IdAccount`)
    REFERENCES `Account` (`IdAccount`),
  CONSTRAINT `FK_UserRoles_Roles`
    FOREIGN KEY (`IdRole`)
    REFERENCES `Role` (`IdRole`),
  CONSTRAINT `fk_AccountRole_Realm1`
    FOREIGN KEY (`IdRealm`)
    REFERENCES `Realm` (`IdRealm`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Users_has_Roles_Roles1_idx` ON `AccountRole` (`IdRole` ASC);

CREATE INDEX `fk_Users_has_Roles_Users1_idx` ON `AccountRole` (`IdAccount` ASC);

CREATE INDEX `fk_AccountRole_Realm1_idx` ON `AccountRole` (`IdRealm` ASC);


-- -----------------------------------------------------
-- Table `OrganizationContact`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `OrganizationContact` ;

CREATE TABLE IF NOT EXISTS `OrganizationContact` (
  `IdOrganization` INT NOT NULL,
  `IdContact` INT NOT NULL,
  PRIMARY KEY (`IdOrganization`, `IdContact`),
  CONSTRAINT `fk_OrganizationContacts_Contact1`
    FOREIGN KEY (`IdContact`)
    REFERENCES `Contact` (`IdContact`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Organization_has_Contact_Organization1_idx` ON `OrganizationContact` (`IdOrganization` ASC);

CREATE INDEX `fk_OrganizationContacts_Contact1_idx` ON `OrganizationContact` (`IdContact` ASC);


-- -----------------------------------------------------
-- Table `ContactDetailType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ContactDetailType` ;

CREATE TABLE IF NOT EXISTS `ContactDetailType` (
  `IdContactDetailType` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(45) NOT NULL,
  `ValidationRule` VARCHAR(600) NULL,
  PRIMARY KEY (`IdContactDetailType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ContactDetail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ContactDetail` ;

CREATE TABLE IF NOT EXISTS `ContactDetail` (
  `IdContactDetail` INT NOT NULL AUTO_INCREMENT,
  `DetailValue` VARCHAR(500) NOT NULL,
  `FK_ContactDetailType` INT NOT NULL,
  `FK_Contact` INT NOT NULL,
  PRIMARY KEY (`IdContactDetail`),
  CONSTRAINT `fk_ContactDetails_Contact1`
    FOREIGN KEY (`FK_Contact`)
    REFERENCES `Contact` (`IdContact`),
  CONSTRAINT `fk_ContactDetails_ContactDetailType1`
    FOREIGN KEY (`FK_ContactDetailType`)
    REFERENCES `ContactDetailType` (`IdContactDetailType`))
ENGINE = InnoDB;

CREATE INDEX `fk_ContactDetails_ContactDetailType1_idx` ON `ContactDetail` (`FK_ContactDetailType` ASC);

CREATE INDEX `fk_ContactDetails_Contact1_idx` ON `ContactDetail` (`FK_Contact` ASC);


-- -----------------------------------------------------
-- Table `Dashboard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Dashboard` ;

CREATE TABLE IF NOT EXISTS `Dashboard` (
  `IdDashboard` INT NOT NULL,
  `FK_ParentDashboard` INT NULL,
  `Path` VARCHAR(100) NOT NULL,
  `Label` VARCHAR(100) NOT NULL,
  `ElementStyle` VARCHAR(100) NOT NULL,
  `GroupStyle` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`IdDashboard`),
  CONSTRAINT `FK_Parent`
    FOREIGN KEY (`FK_ParentDashboard`)
    REFERENCES `Dashboard` (`IdDashboard`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `Path_UNIQUE` ON `Dashboard` (`Path` ASC);

CREATE INDEX `FK_Parent_idx` ON `Dashboard` (`FK_ParentDashboard` ASC);


-- -----------------------------------------------------
-- Table `DesignVersion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DesignVersion` ;

CREATE TABLE IF NOT EXISTS `DesignVersion` (
  `IdDesignVersion` INT NOT NULL,
  `FK_Design` INT NOT NULL,
  `Revision` INT NOT NULL,
  `State` INT(11) NOT NULL,
  `Activation` TIMESTAMP NULL,
  `Deactivation` TIMESTAMP NULL,
  PRIMARY KEY (`IdDesignVersion`),
  CONSTRAINT `fk_DesignVersion_Design1`
    FOREIGN KEY (`FK_Design`)
    REFERENCES `Design` (`IdDesign`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `IdDesign_Revision_UNIQUE` ON `DesignVersion` (`FK_Design` ASC, `Revision` ASC);

CREATE INDEX `fk_DesignVersion_Design1_idx` ON `DesignVersion` (`FK_Design` ASC);


-- -----------------------------------------------------
-- Table `ControlPlan`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlPlan` ;

CREATE TABLE IF NOT EXISTS `ControlPlan` (
  `IdControlPlan` INT NOT NULL,
  `FK_Design` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`IdControlPlan`),
  CONSTRAINT `fk_ControlPlan_Design1`
    FOREIGN KEY (`FK_Design`)
    REFERENCES `Design` (`IdDesign`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlPlan_Design1_idx` ON `ControlPlan` (`FK_Design` ASC);


-- -----------------------------------------------------
-- Table `ControlPlanVersion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlPlanVersion` ;

CREATE TABLE IF NOT EXISTS `ControlPlanVersion` (
  `IdControlPlanVersion` INT NOT NULL,
  `Creator` INT NOT NULL,
  `LastModifier` INT NOT NULL,
  `FK_ControlPlan` INT NOT NULL,
  `SpecificControls` BIT NOT NULL DEFAULT b'0',
  `Comment` VARCHAR(200) NOT NULL DEFAULT '',
  `Revision` INT NOT NULL,
  `State` INT(11) NOT NULL,
  `Activation` TIMESTAMP NULL,
  `Deactivation` TIMESTAMP NULL,
  PRIMARY KEY (`IdControlPlanVersion`),
  CONSTRAINT `fk_ControlPlanVersion_Account1`
    FOREIGN KEY (`Creator`)
    REFERENCES `Account` (`IdAccount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ControlPlanVersion_Account2`
    FOREIGN KEY (`LastModifier`)
    REFERENCES `Account` (`IdAccount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ControlPlanVersion_ControlPlan1`
    FOREIGN KEY (`FK_ControlPlan`)
    REFERENCES `ControlPlan` (`IdControlPlan`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `IdPlan_Revision_UNIQUE` ON `ControlPlanVersion` (`FK_ControlPlan` ASC, `Revision` ASC);

CREATE INDEX `fk_ControlPlanVersion_Account1_idx` ON `ControlPlanVersion` (`Creator` ASC);

CREATE INDEX `fk_ControlPlanVersion_Account2_idx` ON `ControlPlanVersion` (`LastModifier` ASC);


-- -----------------------------------------------------
-- Table `ControlPlanResult`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlPlanResult` ;

CREATE TABLE IF NOT EXISTS `ControlPlanResult` (
  `IdControlPlanResult` INT NOT NULL AUTO_INCREMENT,
  `FK_ControlPlanVersion` INT NOT NULL,
  `LaunchDate` DATETIME NOT NULL,
  `Finished` BIT NOT NULL DEFAULT b'1',
  `WarningEnabled` BIT NOT NULL DEFAULT b'0',
  `WarningChecked` TIMESTAMP NULL,
  PRIMARY KEY (`IdControlPlanResult`),
  CONSTRAINT `fk_ControlPlanResult_ControlPlanVersion1`
    FOREIGN KEY (`FK_ControlPlanVersion`)
    REFERENCES `ControlPlanVersion` (`IdControlPlanVersion`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlPlanResult_ControlPlanVersion1_idx` ON `ControlPlanResult` (`FK_ControlPlanVersion` ASC);


-- -----------------------------------------------------
-- Table `BucketType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BucketType` ;

CREATE TABLE IF NOT EXISTS `BucketType` (
  `IdBucket` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`IdBucket`));


-- -----------------------------------------------------
-- Table `ControlGroup`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlGroup` ;

CREATE TABLE IF NOT EXISTS `ControlGroup` (
  `IdControlGroup` INT NOT NULL AUTO_INCREMENT,
  `FK_Bucket` INT NULL,
  `Color` CHAR(6) NULL,
  `ShortName` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(300) NOT NULL,
  PRIMARY KEY (`IdControlGroup`),
  CONSTRAINT `fk_ControlGroup_BucketType1`
    FOREIGN KEY (`FK_Bucket`)
    REFERENCES `BucketType` (`IdBucket`));

CREATE INDEX `fk_ControlGroup_BucketType1_idx` ON `ControlGroup` (`FK_Bucket` ASC);


-- -----------------------------------------------------
-- Table `ControlTool`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlTool` ;

CREATE TABLE IF NOT EXISTS `ControlTool` (
  `IdControlTool` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`IdControlTool`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SSR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SSR` ;

CREATE TABLE IF NOT EXISTS `SSR` (
  `IdSSR` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(20) NOT NULL,
  `Description` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`IdSSR`));


-- -----------------------------------------------------
-- Table `ToleranceType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ToleranceType` ;

CREATE TABLE IF NOT EXISTS `ToleranceType` (
  `IdToleranceType` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(40) NOT NULL,
  `FK_ResultType` INT NOT NULL,
  PRIMARY KEY (`IdToleranceType`))
ENGINE = InnoDB;

CREATE INDEX `fk_ToleranceType_ResultType1_idx` ON `ToleranceType` (`FK_ResultType` ASC);


-- -----------------------------------------------------
-- Table `Unit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Unit` ;

CREATE TABLE IF NOT EXISTS `Unit` (
  `IdUnit` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(40) NOT NULL,
  `Abbreviation` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`IdUnit`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CataloguedControl`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CataloguedControl` ;

CREATE TABLE IF NOT EXISTS `CataloguedControl` (
  `IdCataloguedControl` INT NOT NULL,
  `FK_ControlGroup` INT(11) NOT NULL,
  `FK_ToleranceType` INT NOT NULL,
  `Name` VARCHAR(250) NOT NULL,
  `FK_SSR` INT NULL,
  `FK_ControlTool` INT NULL,
  `FK_Unit` INT NULL,
  `Code` VARCHAR(5) NULL,
  PRIMARY KEY (`IdCataloguedControl`),
  CONSTRAINT `fk_CataloguedControl_ControlGroup`
    FOREIGN KEY (`FK_ControlGroup`)
    REFERENCES `ControlGroup` (`IdControlGroup`),
  CONSTRAINT `fk_CataloguedControl_ControlTool1`
    FOREIGN KEY (`FK_ControlTool`)
    REFERENCES `ControlTool` (`IdControlTool`),
  CONSTRAINT `fk_CataloguedControl_SSR1`
    FOREIGN KEY (`FK_SSR`)
    REFERENCES `SSR` (`IdSSR`),
  CONSTRAINT `fk_CataloguedControl_ToleranceType1`
    FOREIGN KEY (`FK_ToleranceType`)
    REFERENCES `ToleranceType` (`IdToleranceType`),
  CONSTRAINT `fk_CataloguedControl_Unit1`
    FOREIGN KEY (`FK_Unit`)
    REFERENCES `Unit` (`IdUnit`))
ENGINE = InnoDB;

CREATE INDEX `fk_CataloguedControl_ToleranceType1_idx` ON `CataloguedControl` (`FK_ToleranceType` ASC);

CREATE INDEX `fk_CataloguedControl_ControlTool1_idx` ON `CataloguedControl` (`FK_ControlTool` ASC);

CREATE INDEX `fk_CataloguedControl_SSR1_idx` ON `CataloguedControl` (`FK_SSR` ASC);

CREATE INDEX `fk_CataloguedControl_Unit1_idx` ON `CataloguedControl` (`FK_Unit` ASC);

CREATE INDEX `fk_CataloguedControl_ControlGroup` ON `CataloguedControl` (`FK_ControlGroup` ASC);


-- -----------------------------------------------------
-- Table `ResultType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ResultType` ;

CREATE TABLE IF NOT EXISTS `ResultType` (
  `IdResultType` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`IdResultType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CSS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CSS` ;

CREATE TABLE IF NOT EXISTS `CSS` (
  `IdCSS` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(40) NOT NULL,
  `Description` VARCHAR(100) NOT NULL,
  `FailureText` VARCHAR(250) NOT NULL,
  `RequiresValidation` BIT(1) NOT NULL DEFAULT b'0',
  PRIMARY KEY (`IdCSS`));


-- -----------------------------------------------------
-- Table `Interval`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Interval` ;

CREATE TABLE IF NOT EXISTS `Interval` (
  `IdInterval` INT NOT NULL AUTO_INCREMENT,
  `FK_Unit` INT NOT NULL,
  `IsSpecial` BIT(1) NOT NULL DEFAULT b'0',
  `Name` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`IdInterval`),
  CONSTRAINT `fk_Intervals_Units1`
    FOREIGN KEY (`FK_Unit`)
    REFERENCES `Unit` (`IdUnit`))
ENGINE = InnoDB;

CREATE INDEX `fk_Intervals_Units1_idx` ON `Interval` (`FK_Unit` ASC);


-- -----------------------------------------------------
-- Table `ControlDefinition`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlDefinition` ;

CREATE TABLE IF NOT EXISTS `ControlDefinition` (
  `IdControl` INT NOT NULL AUTO_INCREMENT,
  `FK_ControlPlanVersion` INT NOT NULL,
  `RequiresPart` BIT(1) NOT NULL DEFAULT b'0',
  `Code` VARCHAR(5) NOT NULL,
  `FK_CataloguedControl` INT NOT NULL,
  `FK_ControlGroup` INT NOT NULL,
  `SpecificControlText` VARCHAR(80) NOT NULL,
  `FK_CSS` INT NULL,
  `FK_ControlTool` INT NULL,
  `SpecificControlToolText` VARCHAR(80) NOT NULL,
  `FK_SSR` INT NULL,
  `FK_Interval` INT NULL,
  `IntervalValue` INT NULL,
  `FK_ToleranceType` INT NULL,
  `SpecificToleranceTypeText` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`IdControl`),
  CONSTRAINT `fk_ControlDefinition_CSS1`
    FOREIGN KEY (`FK_CSS`)
    REFERENCES `CSS` (`IdCSS`),
  CONSTRAINT `fk_ControlDefinition_CataloguedControl1`
    FOREIGN KEY (`FK_CataloguedControl`)
    REFERENCES `CataloguedControl` (`IdCataloguedControl`),
  CONSTRAINT `fk_ControlDefinition_ControlGroup1`
    FOREIGN KEY (`FK_ControlGroup`)
    REFERENCES `ControlGroup` (`IdControlGroup`),
  CONSTRAINT `fk_ControlDefinition_ControlPlanVersion1`
    FOREIGN KEY (`FK_ControlPlanVersion`)
    REFERENCES `ControlPlanVersion` (`IdControlPlanVersion`),
  CONSTRAINT `fk_ControlDefinition_ControlTool1`
    FOREIGN KEY (`FK_ControlTool`)
    REFERENCES `ControlTool` (`IdControlTool`),
  CONSTRAINT `fk_ControlDefinition_Interval1`
    FOREIGN KEY (`FK_Interval`)
    REFERENCES `Interval` (`IdInterval`),
  CONSTRAINT `fk_ControlDefinition_SSR1`
    FOREIGN KEY (`FK_SSR`)
    REFERENCES `SSR` (`IdSSR`),
  CONSTRAINT `fk_ControlDefinition_ToleranceType1`
    FOREIGN KEY (`FK_ToleranceType`)
    REFERENCES `ToleranceType` (`IdToleranceType`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlDefinition_CataloguedControl1_idx` ON `ControlDefinition` (`FK_CataloguedControl` ASC);

CREATE INDEX `fk_ControlDefinition_ControlPlanVersion1_idx` ON `ControlDefinition` (`FK_ControlPlanVersion` ASC);

CREATE INDEX `fk_ControlDefinition_ControlTool1_idx` ON `ControlDefinition` (`FK_ControlTool` ASC);

CREATE INDEX `fk_ControlDefinition_SSR1_idx` ON `ControlDefinition` (`FK_SSR` ASC);

CREATE INDEX `fk_ControlDefinition_CSS1_idx` ON `ControlDefinition` (`FK_CSS` ASC);

CREATE INDEX `fk_ControlDefinition_Interval1_idx` ON `ControlDefinition` (`FK_Interval` ASC);

CREATE INDEX `fk_ControlDefinition_ToleranceType1_idx` ON `ControlDefinition` (`FK_ToleranceType` ASC);

CREATE INDEX `fk_ControlDefinition_ControlGroup1_idx` ON `ControlDefinition` (`FK_ControlGroup` ASC);


-- -----------------------------------------------------
-- Table `File`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `File` ;

CREATE TABLE IF NOT EXISTS `File` (
  `Hash` CHAR(130) NOT NULL,
  `FK_Bucket` INT NOT NULL,
  `Name` VARCHAR(50) NOT NULL,
  `Extension` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`Hash`, `FK_Bucket`),
  CONSTRAINT `fk_File_BucketType1`
    FOREIGN KEY (`FK_Bucket`)
    REFERENCES `BucketType` (`IdBucket`))
ENGINE = InnoDB;

CREATE INDEX `fk_File_BucketType1_idx` ON `File` (`FK_Bucket` ASC);


-- -----------------------------------------------------
-- Table `ControlPlanVersionFile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlPlanVersionFile` ;

CREATE TABLE IF NOT EXISTS `ControlPlanVersionFile` (
  `FK_ControlPlanVersion` INT(11) NOT NULL,
  `FK_Hash` NCHAR(130) NOT NULL,
  `FK_Bucket` INT(11) NOT NULL,
  PRIMARY KEY (`FK_ControlPlanVersion`, `FK_Hash`, `FK_Bucket`),
  CONSTRAINT `FK_ControlPlanVersionFile_ControlPlanVersion`
    FOREIGN KEY (`FK_ControlPlanVersion`)
    REFERENCES `ControlPlanVersion` (`IdControlPlanVersion`),
  CONSTRAINT `FK_ControlPlanVersionFile_File`
    FOREIGN KEY (`FK_Hash` , `FK_Bucket`)
    REFERENCES `File` (`Hash` , `FK_Bucket`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `FK_ControlPlanVersionFile_File` ON `ControlPlanVersionFile` (`FK_Hash` ASC, `FK_Bucket` ASC);


-- -----------------------------------------------------
-- Table `ControlPlanVersionSketch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlPlanVersionSketch` ;

CREATE TABLE IF NOT EXISTS `ControlPlanVersionSketch` (
  `FK_ControlPlanVersion` INT(11) NOT NULL,
  `FK_Hash` NCHAR(130) NOT NULL,
  `FK_Bucket` INT(11) NOT NULL,
  PRIMARY KEY (`FK_ControlPlanVersion`, `FK_Hash`, `FK_Bucket`),
  CONSTRAINT `FK_ControlPlanVersionSketch_ControlPlanVersion`
    FOREIGN KEY (`FK_ControlPlanVersion`)
    REFERENCES `ControlPlanVersion` (`IdControlPlanVersion`),
  CONSTRAINT `FK_ControlPlanVersionSketch_File`
    FOREIGN KEY (`FK_Hash` , `FK_Bucket`)
    REFERENCES `File` (`Hash` , `FK_Bucket`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `FK_ControlPlanVersionSketch_File` ON `ControlPlanVersionSketch` (`FK_Hash` ASC, `FK_Bucket` ASC);


-- -----------------------------------------------------
-- Table `ClientEvent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ClientEvent` ;

CREATE TABLE IF NOT EXISTS `ClientEvent` (
  `IdClientEvent` INT NOT NULL AUTO_INCREMENT,
  `Order` INT NOT NULL,
  `Name` VARCHAR(100) NOT NULL,
  `OncePerEvent` BIT NOT NULL,
  `FK_Client` INT NOT NULL,
  `ColPos` INT NOT NULL,
  `RowPos` INT NOT NULL,
  PRIMARY KEY (`IdClientEvent`),
  CONSTRAINT `fk_ClientEvent_Client1`
    FOREIGN KEY (`FK_Client`)
    REFERENCES `Client` (`IdClient`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `FK_ClientEvent_Position` ON `ClientEvent` (`FK_Client` ASC, `ColPos` ASC, `RowPos` ASC);

CREATE INDEX `fk_ClientEvent_Client1_idx` ON `ClientEvent` (`FK_Client` ASC);


-- -----------------------------------------------------
-- Table `ControlResultType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlResultType` ;

CREATE TABLE IF NOT EXISTS `ControlResultType` (
  `IdControlResultType` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`IdControlResultType`));


-- -----------------------------------------------------
-- Table `Shift`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Shift` ;

CREATE TABLE IF NOT EXISTS `Shift` (
  `IdShift` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(30) NOT NULL,
  `FK_Plant` INT NOT NULL,
  `StartTime` TIME NOT NULL,
  `EndTime` TIME NOT NULL,
  `ProductionOffsetHours` INT NOT NULL,
  PRIMARY KEY (`IdShift`));

CREATE INDEX `fk_Shift_Plant1_idx` ON `Shift` (`FK_Plant` ASC);


-- -----------------------------------------------------
-- Table `ShiftSummary`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ShiftSummary` ;

CREATE TABLE IF NOT EXISTS `ShiftSummary` (
  `IdShiftSummary` INT NOT NULL AUTO_INCREMENT,
  `FK_Shift` INT NOT NULL,
  `FK_Station` INT NOT NULL,
  `ShiftDate` DATE NOT NULL,
  PRIMARY KEY (`IdShiftSummary`),
  CONSTRAINT `fk_ShiftSummary_Shift1`
    FOREIGN KEY (`FK_Shift`)
    REFERENCES `Shift` (`IdShift`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `UK_Shift` ON `ShiftSummary` (`FK_Shift` ASC, `FK_Station` ASC, `ShiftDate` ASC);

CREATE INDEX `fk_ShiftSummary_Shift1_idx` ON `ShiftSummary` (`FK_Shift` ASC);

CREATE INDEX `fk_ShiftSummary_Station1_idx` ON `ShiftSummary` (`FK_Station` ASC);


-- -----------------------------------------------------
-- Table `PartPlanResult`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PartPlanResult` ;

CREATE TABLE IF NOT EXISTS `PartPlanResult` (
  `IdPartPlanResult` INT NOT NULL AUTO_INCREMENT,
  `FK_ControlPlanResult` INT NOT NULL,
  `FK_ShiftSummary` INT NOT NULL,
  `FK_PartVersion` INT NOT NULL,
  `LaunchDate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Finished` BIT NOT NULL DEFAULT b'0',
  PRIMARY KEY (`IdPartPlanResult`),
  CONSTRAINT `fk_PartPlanResult_ControlPlanResult1`
    FOREIGN KEY (`FK_ControlPlanResult`)
    REFERENCES `ControlPlanResult` (`IdControlPlanResult`),
  CONSTRAINT `fk_PartPlanResult_ShiftSummary1`
    FOREIGN KEY (`FK_ShiftSummary`)
    REFERENCES `ShiftSummary` (`IdShiftSummary`))
ENGINE = InnoDB;

CREATE INDEX `fk_PartPlanResult_PartVersion1_idx` ON `PartPlanResult` (`FK_PartVersion` ASC);

CREATE INDEX `fk_PartPlanResult_ControlPlanResult1_idx` ON `PartPlanResult` (`FK_ControlPlanResult` ASC);

CREATE INDEX `fk_PartPlanResult_ShiftSummary1_idx` ON `PartPlanResult` (`FK_ShiftSummary` ASC);


-- -----------------------------------------------------
-- Table `ControlResultBundle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlResultBundle` ;

CREATE TABLE IF NOT EXISTS `ControlResultBundle` (
  `IdControlResultBundle` INT NOT NULL AUTO_INCREMENT,
  `PartCount` INT NOT NULL,
  `Traceability` VARCHAR(50) NULL,
  `FK_PartPlanResult` INT NOT NULL,
  `FK_ClientEvent` INT NOT NULL,
  `FK_ControlResultType` INT NOT NULL,
  `LaunchDate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `FK_Supervisor` INT NULL,
  `SupervisionDate` TIMESTAMP NULL,
  PRIMARY KEY (`IdControlResultBundle`),
  CONSTRAINT `fk_ControlResultBundle_ClientEvent1`
    FOREIGN KEY (`FK_ClientEvent`)
    REFERENCES `ClientEvent` (`IdClientEvent`),
  CONSTRAINT `fk_ControlResultBundle_ControlResultType1`
    FOREIGN KEY (`FK_ControlResultType`)
    REFERENCES `ControlResultType` (`IdControlResultType`),
  CONSTRAINT `fk_ControlResultBundle_PartPlanResult1`
    FOREIGN KEY (`FK_PartPlanResult`)
    REFERENCES `PartPlanResult` (`IdPartPlanResult`),
  CONSTRAINT `fk_ControlResultBundle_Account1`
    FOREIGN KEY (`FK_Supervisor`)
    REFERENCES `Account` (`IdAccount`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ControlResultBundle_PartPlanResult1_idx` ON `ControlResultBundle` (`FK_PartPlanResult` ASC);

CREATE INDEX `fk_ControlResultBundle_ClientEvent1_idx` ON `ControlResultBundle` (`FK_ClientEvent` ASC);

CREATE INDEX `fk_ControlResultBundle_ControlResultType1_idx` ON `ControlResultBundle` (`FK_ControlResultType` ASC);

CREATE INDEX `fk_ControlResultBundle_Account1_idx` ON `ControlResultBundle` (`FK_Supervisor` ASC);


-- -----------------------------------------------------
-- Table `ValidationResultType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ValidationResultType` ;

CREATE TABLE IF NOT EXISTS `ValidationResultType` (
  `IdValidationResultType` INT NOT NULL AUTO_INCREMENT,
  `FK_SourceResult` INT NOT NULL,
  `ShortName` VARCHAR(10) NOT NULL,
  `Description` VARCHAR(100) NOT NULL,
  `RequiresSupervision` BIT NOT NULL,
  PRIMARY KEY (`IdValidationResultType`),
  CONSTRAINT `fk_ValidationResultType_ControlResultType1`
    FOREIGN KEY (`FK_SourceResult`)
    REFERENCES `ControlResultType` (`IdControlResultType`))
ENGINE = InnoDB;

CREATE INDEX `fk_ValidationResultType_ControlResultType1_idx` ON `ValidationResultType` (`FK_SourceResult` ASC);


-- -----------------------------------------------------
-- Table `ControlResult`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlResult` ;

CREATE TABLE IF NOT EXISTS `ControlResult` (
  `IdResult` INT NOT NULL AUTO_INCREMENT,
  `FK_ControlResultBundle` INT NOT NULL,
  `FK_Control` INT NOT NULL,
  `Supervised` BIT NOT NULL DEFAULT b'0',
  `FK_Controller` INT NULL,
  `FK_Validation` INT NULL,
  `FK_ControlResultType` INT NOT NULL,
  `ResultInt` INT NULL,
  `ResultFloat` DOUBLE NULL,
  `LastAction` TIMESTAMP NULL,
  `AffectedParts` INT NULL,
  `Comment` VARCHAR(255) NULL,
  PRIMARY KEY (`IdResult`),
  CONSTRAINT `fk_ControlResult_ControlDefinition1`
    FOREIGN KEY (`FK_Control`)
    REFERENCES `ControlDefinition` (`IdControl`),
  CONSTRAINT `fk_ControlResult_ControlResultBundle1`
    FOREIGN KEY (`FK_ControlResultBundle`)
    REFERENCES `ControlResultBundle` (`IdControlResultBundle`),
  CONSTRAINT `fk_ControlResult_ControlResultType1`
    FOREIGN KEY (`FK_ControlResultType`)
    REFERENCES `ControlResultType` (`IdControlResultType`),
  CONSTRAINT `fk_ControlResult_Account1`
    FOREIGN KEY (`FK_Controller`)
    REFERENCES `Account` (`IdAccount`),
  CONSTRAINT `fk_ControlResult_ValidationResultTypes1`
    FOREIGN KEY (`FK_Validation`)
    REFERENCES `ValidationResultType` (`IdValidationResultType`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlResult_ControlDefinition1_idx` ON `ControlResult` (`FK_Control` ASC);

CREATE INDEX `fk_ControlResult_User1_idx` ON `ControlResult` (`FK_Controller` ASC);

CREATE INDEX `fk_ControlResult_ControlResultBundle1_idx` ON `ControlResult` (`FK_ControlResultBundle` ASC);

CREATE INDEX `fk_ControlResult_ValidationResultTypes1_idx` ON `ControlResult` (`FK_Validation` ASC);

CREATE INDEX `fk_ControlResult_ControlResultType1_idx` ON `ControlResult` (`FK_ControlResultType` ASC);


-- -----------------------------------------------------
-- Table `DesignToolset`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DesignToolset` ;

CREATE TABLE IF NOT EXISTS `DesignToolset` (
  `IdDesign` INT NOT NULL,
  `IdToolset` INT(11) NOT NULL,
  PRIMARY KEY (`IdDesign`, `IdToolset`),
  CONSTRAINT `fk_DesignToolset_Design`
    FOREIGN KEY (`IdDesign`)
    REFERENCES `Design` (`IdDesign`),
  CONSTRAINT `fk_DesignToolset_Toolset`
    FOREIGN KEY (`IdToolset`)
    REFERENCES `Toolset` (`IdToolset`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_DesignToolset_Toolset1_idx` ON `DesignToolset` (`IdToolset` ASC);

CREATE INDEX `fk_DesignToolset_Design1_idx` ON `DesignToolset` (`IdDesign` ASC);


-- -----------------------------------------------------
-- Table `PartVersion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PartVersion` ;

CREATE TABLE IF NOT EXISTS `PartVersion` (
  `IdPartVersion` INT NOT NULL AUTO_INCREMENT,
  `FK_Part` INT NOT NULL,
  `Code` VARCHAR(50) NOT NULL,
  `Revision` INT NOT NULL,
  `State` INT(11) NOT NULL,
  `Activation` TIMESTAMP NULL,
  `Deactivation` TIMESTAMP NULL,
  PRIMARY KEY (`IdPartVersion`),
  CONSTRAINT `fk_PartVersion_Part1`
    FOREIGN KEY (`FK_Part`)
    REFERENCES `Part` (`IdPart`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `PartRevision_UNIQUE` ON `PartVersion` (`FK_Part` ASC, `Revision` ASC);


-- -----------------------------------------------------
-- Table `ControlPlanPart`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlPlanPart` ;

CREATE TABLE IF NOT EXISTS `ControlPlanPart` (
  `IdControlPlan` INT NOT NULL,
  `IdPart` INT(11) NOT NULL,
  `NumParts` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`IdControlPlan`, `IdPart`),
  CONSTRAINT `fk_ControlPlanPart_ControlPlan1`
    FOREIGN KEY (`IdControlPlan`)
    REFERENCES `ControlPlan` (`IdControlPlan`),
  CONSTRAINT `fk_ControlPlanPart_Part1`
    FOREIGN KEY (`IdPart`)
    REFERENCES `Part` (`IdPart`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlPlanPart_Part1_idx` ON `ControlPlanPart` (`IdPart` ASC);

CREATE INDEX `fk_ControlPlanPart_ControlPlan1_idx` ON `ControlPlanPart` (`IdControlPlan` ASC);


-- -----------------------------------------------------
-- Table `PartControl`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PartControl` ;

CREATE TABLE IF NOT EXISTS `PartControl` (
  `IdPartVersion` INT NOT NULL,
  `IdControl` INT NOT NULL,
  PRIMARY KEY (`IdPartVersion`, `IdControl`),
  CONSTRAINT `fk_PartVersion_has_ControlDefinition_ControlDefinition1`
    FOREIGN KEY (`IdControl`)
    REFERENCES `ControlDefinition` (`IdControl`),
  CONSTRAINT `fk_PartControl_PartVersion1`
    FOREIGN KEY (`IdPartVersion`)
    REFERENCES `PartVersion` (`IdPartVersion`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_PartVersionControlDefinition_ControlDefinition1_idx` ON `PartControl` (`IdControl` ASC);

CREATE INDEX `fk_PartVersionControlDefinition_PartVersion1_idx` ON `PartControl` (`IdPartVersion` ASC);


-- -----------------------------------------------------
-- Table `LineDesign`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LineDesign` ;

CREATE TABLE IF NOT EXISTS `LineDesign` (
  `IdLine` INT NOT NULL,
  `IdDesign` INT NOT NULL,
  PRIMARY KEY (`IdLine`, `IdDesign`),
  CONSTRAINT `fk_Design_has_Line_Design1`
    FOREIGN KEY (`IdDesign`)
    REFERENCES `Design` (`IdDesign`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Design_has_Line_Line1_idx` ON `LineDesign` (`IdLine` ASC);

CREATE INDEX `fk_Design_has_Line_Design1_idx` ON `LineDesign` (`IdDesign` ASC);


-- -----------------------------------------------------
-- Table `TimeUnit`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TimeUnit` ;

CREATE TABLE IF NOT EXISTS `TimeUnit` (
  `IdUnit` INT NOT NULL,
  `SecondsPerUnit` INT NOT NULL,
  PRIMARY KEY (`IdUnit`),
  CONSTRAINT `fk_TimeUnit_Unit1`
    FOREIGN KEY (`IdUnit`)
    REFERENCES `Unit` (`IdUnit`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SpecialInterval`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SpecialInterval` ;

CREATE TABLE IF NOT EXISTS `SpecialInterval` (
  `IdSpecialInterval` INT NOT NULL AUTO_INCREMENT,
  `MonthNo` INT NULL,
  `DayOfMonth` INT NULL,
  `DayOfWeek` INT NULL,
  `FK_Shift` INT NULL,
  PRIMARY KEY (`IdSpecialInterval`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SpecialIntervalCorrelation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SpecialIntervalCorrelation` ;

CREATE TABLE IF NOT EXISTS `SpecialIntervalCorrelation` (
  `IdInterval` INT NOT NULL,
  `IdSpecialInterval` INT NOT NULL,
  PRIMARY KEY (`IdInterval`, `IdSpecialInterval`),
  CONSTRAINT `fk_Interval_has_SpecialInterval_Interval1`
    FOREIGN KEY (`IdInterval`)
    REFERENCES `Interval` (`IdInterval`),
  CONSTRAINT `fk_Interval_has_SpecialInterval_SpecialInterval1`
    FOREIGN KEY (`IdSpecialInterval`)
    REFERENCES `SpecialInterval` (`IdSpecialInterval`))
ENGINE = InnoDB;

CREATE INDEX `fk_Interval_has_SpecialInterval_SpecialInterval1_idx` ON `SpecialIntervalCorrelation` (`IdSpecialInterval` ASC);

CREATE INDEX `fk_Interval_has_SpecialInterval_Interval1_idx` ON `SpecialIntervalCorrelation` (`IdInterval` ASC);


-- -----------------------------------------------------
-- Table `SystemEvent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SystemEvent` ;

CREATE TABLE IF NOT EXISTS `SystemEvent` (
  `IdSystemEvent` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`IdSystemEvent`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ClientEventSystemCorrelation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ClientEventSystemCorrelation` ;

CREATE TABLE IF NOT EXISTS `ClientEventSystemCorrelation` (
  `IdSystemEvent` INT NOT NULL,
  `IdClientEvent` INT NOT NULL,
  PRIMARY KEY (`IdSystemEvent`, `IdClientEvent`),
  CONSTRAINT `fk_SystemEvent_has_ClientEvent_ClientEvent1`
    FOREIGN KEY (`IdClientEvent`)
    REFERENCES `ClientEvent` (`IdClientEvent`),
  CONSTRAINT `fk_SystemEvent_has_ClientEvent_SystemEvent1`
    FOREIGN KEY (`IdSystemEvent`)
    REFERENCES `SystemEvent` (`IdSystemEvent`))
ENGINE = InnoDB;

CREATE INDEX `fk_SystemEvent_has_ClientEvent_ClientEvent1_idx` ON `ClientEventSystemCorrelation` (`IdClientEvent` ASC);

CREATE INDEX `fk_SystemEvent_has_ClientEvent_SystemEvent1_idx` ON `ClientEventSystemCorrelation` (`IdSystemEvent` ASC);


-- -----------------------------------------------------
-- Table `ControlDefinitionEvent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlDefinitionEvent` ;

CREATE TABLE IF NOT EXISTS `ControlDefinitionEvent` (
  `IdControl` INT NOT NULL,
  `IdClientEvent` INT NOT NULL,
  PRIMARY KEY (`IdControl`, `IdClientEvent`),
  CONSTRAINT `fk_ControlDefinition_has_ClientEvent_ClientEvent1`
    FOREIGN KEY (`IdClientEvent`)
    REFERENCES `ClientEvent` (`IdClientEvent`),
  CONSTRAINT `fk_ControlDefinition_has_ClientEvent_ControlDefinition1`
    FOREIGN KEY (`IdControl`)
    REFERENCES `ControlDefinition` (`IdControl`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlDefinition_has_ClientEvent_ClientEvent1_idx` ON `ControlDefinitionEvent` (`IdClientEvent` ASC);

CREATE INDEX `fk_ControlDefinition_has_ClientEvent_ControlDefinition1_idx` ON `ControlDefinitionEvent` (`IdControl` ASC);


-- -----------------------------------------------------
-- Table `EventAttributeType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EventAttributeType` ;

CREATE TABLE IF NOT EXISTS `EventAttributeType` (
  `IdAttributeType` INT NOT NULL,
  `Name` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`IdAttributeType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EventAttribute`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EventAttribute` ;

CREATE TABLE IF NOT EXISTS `EventAttribute` (
  `IdControlPlanVersion` INT NOT NULL,
  `IdClientEvent` INT NOT NULL,
  `IdAttributeType` INT NOT NULL,
  `Value` INT NOT NULL,
  PRIMARY KEY (`IdControlPlanVersion`, `IdClientEvent`, `IdAttributeType`),
  CONSTRAINT `fk_ControlPlanVersion_has_ClientEvent_ClientEvent1`
    FOREIGN KEY (`IdClientEvent`)
    REFERENCES `ClientEvent` (`IdClientEvent`),
  CONSTRAINT `fk_ControlPlanVersion_has_ClientEvent_ControlPlanVersion1`
    FOREIGN KEY (`IdControlPlanVersion`)
    REFERENCES `ControlPlanVersion` (`IdControlPlanVersion`),
  CONSTRAINT `fk_EventAttribute_EventAttributeType1`
    FOREIGN KEY (`IdAttributeType`)
    REFERENCES `EventAttributeType` (`IdAttributeType`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlPlanVersion_has_ClientEvent_ClientEvent1_idx` ON `EventAttribute` (`IdClientEvent` ASC);

CREATE INDEX `fk_ControlPlanVersion_has_ClientEvent_ControlPlanVersion1_idx` ON `EventAttribute` (`IdControlPlanVersion` ASC);

CREATE INDEX `fk_EventAttribute_EventAttributeType1_idx` ON `EventAttribute` (`IdAttributeType` ASC);


-- -----------------------------------------------------
-- Table `ControlTolerance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlTolerance` ;

CREATE TABLE IF NOT EXISTS `ControlTolerance` (
  `FK_Control` INT NOT NULL,
  `UpperLimit` FLOAT NULL,
  `UpperTolerance` FLOAT NULL,
  `Nominal` INT NULL,
  `LowerTolerance` FLOAT NULL,
  `LowerLimit` FLOAT NULL,
  PRIMARY KEY (`FK_Control`),
  CONSTRAINT `fk_ControlTolerance_ControlDefinition1`
    FOREIGN KEY (`FK_Control`)
    REFERENCES `ControlDefinition` (`IdControl`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlTolerance_ControlDefinition1_idx` ON `ControlTolerance` (`FK_Control` ASC);


-- -----------------------------------------------------
-- Table `ControlDefinitionFile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlDefinitionFile` ;

CREATE TABLE IF NOT EXISTS `ControlDefinitionFile` (
  `FK_Control` INT(11) NOT NULL,
  `FK_Hash` NCHAR(130) NOT NULL,
  `FK_Bucket` INT(11) NOT NULL,
  PRIMARY KEY (`FK_Control`, `FK_Hash`, `FK_Bucket`),
  CONSTRAINT `FK_ControlDefinitionFile_ControlDefinition`
    FOREIGN KEY (`FK_Control`)
    REFERENCES `ControlDefinition` (`IdControl`),
  CONSTRAINT `FK_ControlDefinitionFile_Files`
    FOREIGN KEY (`FK_Hash` , `FK_Bucket`)
    REFERENCES `File` (`Hash` , `FK_Bucket`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `FK_ControlDefinitionFile_Files` ON `ControlDefinitionFile` (`FK_Hash` ASC, `FK_Bucket` ASC);


-- -----------------------------------------------------
-- Table `ShiftDay`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ShiftDay` ;

CREATE TABLE IF NOT EXISTS `ShiftDay` (
  `FK_Shift` INT NOT NULL,
  `DayOfWeek` MEDIUMINT(9) NOT NULL,
  PRIMARY KEY (`FK_Shift`, `DayOfWeek`),
  CONSTRAINT `fk_ShiftDay_Shift1`
    FOREIGN KEY (`FK_Shift`)
    REFERENCES `Shift` (`IdShift`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TeamLeaderTrace`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TeamLeaderTrace` ;

CREATE TABLE IF NOT EXISTS `TeamLeaderTrace` (
  `FK_ShiftSummary` INT NOT NULL,
  `FK_User` INT NOT NULL,
  `LoginDate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `lastAction` TIMESTAMP NULL DEFAULT NULL,
  `Active` BIT(1) NOT NULL,
  PRIMARY KEY (`FK_ShiftSummary`, `FK_User`, `LoginDate`),
  CONSTRAINT `fk_TeamLeaderTrace_ShiftSummary1`
    FOREIGN KEY (`FK_ShiftSummary`)
    REFERENCES `ShiftSummary` (`IdShiftSummary`),
  CONSTRAINT `fk_TeamLeaderTrace_User1`
    FOREIGN KEY (`FK_User`)
    REFERENCES `Account` (`IdAccount`))
ENGINE = InnoDB;

CREATE INDEX `fk_TeamLeaderTrace_User1_idx` ON `TeamLeaderTrace` (`FK_User` ASC);


-- -----------------------------------------------------
-- Table `LineBOMS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LineBOMS` ;

CREATE TABLE IF NOT EXISTS `LineBOMS` (
  `FK_Line` INT NOT NULL,
  `FK_BOM` INT NOT NULL,
  `IsUsual` BIT(1) NOT NULL,
  PRIMARY KEY (`FK_Line`, `FK_BOM`),
  CONSTRAINT `fk_LineBOMS_Bom1`
    FOREIGN KEY (`FK_BOM`)
    REFERENCES `Bom` (`IdBOM`),
  CONSTRAINT `fk_LineBOMS_Line1`
    FOREIGN KEY (`FK_Line`)
    REFERENCES `Line` (`IdLine`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_LineBOMS_Bom1_idx` ON `LineBOMS` (`FK_BOM` ASC);


-- -----------------------------------------------------
-- Table `ControlResultValidationTrace`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ControlResultValidationTrace` ;

CREATE TABLE IF NOT EXISTS `ControlResultValidationTrace` (
  `FK_ControlResult` INT NOT NULL,
  `ActionDate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `FK_Validator` INT NOT NULL,
  `FK_ValidationResult` INT NOT NULL,
  PRIMARY KEY (`FK_ControlResult`, `ActionDate`),
  CONSTRAINT `fk_ControlResultValidationTrace_ControlResult1`
    FOREIGN KEY (`FK_ControlResult`)
    REFERENCES `ControlResult` (`IdResult`),
  CONSTRAINT `fk_ControlResultValidationTrace_User1`
    FOREIGN KEY (`FK_Validator`)
    REFERENCES `Account` (`IdAccount`),
  CONSTRAINT `fk_ControlResultValidationTrace_ValidationResultTypes1`
    FOREIGN KEY (`FK_ValidationResult`)
    REFERENCES `ValidationResultType` (`IdValidationResultType`))
ENGINE = InnoDB;

CREATE INDEX `fk_ControlResultValidationTrace_User1_idx` ON `ControlResultValidationTrace` (`FK_Validator` ASC);

CREATE INDEX `fk_ControlResultValidationTrace_ValidationResultTypes1_idx` ON `ControlResultValidationTrace` (`FK_ValidationResult` ASC);


-- -----------------------------------------------------
-- Table `ReviewType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ReviewType` ;

CREATE TABLE IF NOT EXISTS `ReviewType` (
  `IdReviewType` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`IdReviewType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ShiftReview`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ShiftReview` ;

CREATE TABLE IF NOT EXISTS `ShiftReview` (
  `FK_ShiftSummary` INT NOT NULL,
  `ReviewTime` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `FK_ReviewType` INT NOT NULL,
  `FK_Reviewer` INT NOT NULL,
  PRIMARY KEY (`FK_ShiftSummary`, `ReviewTime`),
  CONSTRAINT `fk_ShiftReview_ReviewType1`
    FOREIGN KEY (`FK_ReviewType`)
    REFERENCES `ReviewType` (`IdReviewType`),
  CONSTRAINT `fk_ShiftReview_ShiftSummary1`
    FOREIGN KEY (`FK_ShiftSummary`)
    REFERENCES `ShiftSummary` (`IdShiftSummary`),
  CONSTRAINT `fk_ShiftReview_User1`
    FOREIGN KEY (`FK_Reviewer`)
    REFERENCES `Account` (`IdAccount`))
ENGINE = InnoDB;

CREATE INDEX `fk_ShiftReview_ReviewType1_idx` ON `ShiftReview` (`FK_ReviewType` ASC);

CREATE INDEX `fk_ShiftReview_User1_idx` ON `ShiftReview` (`FK_Reviewer` ASC);


-- -----------------------------------------------------
-- Table `Vehicle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Vehicle` ;

CREATE TABLE IF NOT EXISTS `Vehicle` (
  `IdVehicle` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(40) NOT NULL,
  `FK_Project` INT NOT NULL,
  PRIMARY KEY (`IdVehicle`),
  CONSTRAINT `fk_Vehicle_Project1`
    FOREIGN KEY (`FK_Project`)
    REFERENCES `Project` (`IdProject`));

CREATE INDEX `fk_Vehicle_Project1_idx` ON `Vehicle` (`FK_Project` ASC);


-- -----------------------------------------------------
-- Table `VehicleDesign`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `VehicleDesign` ;

CREATE TABLE IF NOT EXISTS `VehicleDesign` (
  `FK_Design` INT NOT NULL,
  `FK_Vehicle` INT NOT NULL,
  PRIMARY KEY (`FK_Design`, `FK_Vehicle`),
  CONSTRAINT `fk_Design_has_Vehicle_Design1`
    FOREIGN KEY (`FK_Design`)
    REFERENCES `Design` (`IdDesign`),
  CONSTRAINT `fk_Design_has_Vehicle_Vehicle1`
    FOREIGN KEY (`FK_Vehicle`)
    REFERENCES `Vehicle` (`IdVehicle`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_bin;

CREATE INDEX `fk_Design_has_Vehicle_Vehicle1_idx` ON `VehicleDesign` (`FK_Vehicle` ASC);

CREATE INDEX `fk_Design_has_Vehicle_Design1_idx` ON `VehicleDesign` (`FK_Design` ASC);


-- -----------------------------------------------------
-- Table `Module`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Module` ;

CREATE TABLE IF NOT EXISTS `Module` (
  `IdModule` INT NOT NULL,
  `Name` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`IdModule`));


-- -----------------------------------------------------
-- Table `DefectType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DefectType` ;

CREATE TABLE IF NOT EXISTS `DefectType` (
  `IdDefectType` INT NOT NULL,
  `FK_Module` INT NOT NULL,
  `Name` VARCHAR(40) NOT NULL,
  `Glyph` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`IdDefectType`),
  CONSTRAINT `Module`
    FOREIGN KEY (`FK_Module`)
    REFERENCES `Module` (`IdModule`));

CREATE INDEX `Module_idx` ON `DefectType` (`FK_Module` ASC);


-- -----------------------------------------------------
-- Table `Defect`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Defect` ;

CREATE TABLE IF NOT EXISTS `Defect` (
  `IdDefect` INT NOT NULL,
  `FK_ControlResult` INT NOT NULL,
  `FK_DefectType` INT NOT NULL,
  `X` INT NOT NULL,
  `Y` INT NOT NULL,
  `Quadrant` VARCHAR(4) NOT NULL,
  PRIMARY KEY (`IdDefect`),
  CONSTRAINT `fk_Defect_ControlResult1`
    FOREIGN KEY (`FK_ControlResult`)
    REFERENCES `ControlResult` (`IdResult`),
  CONSTRAINT `fk_Defect_DefectType1`
    FOREIGN KEY (`FK_DefectType`)
    REFERENCES `DefectType` (`IdDefectType`))
ENGINE = InnoDB;

CREATE INDEX `fk_Defect_DefectType1_idx` ON `Defect` (`FK_DefectType` ASC);

CREATE INDEX `fk_Defect_ControlResult1_idx` ON `Defect` (`FK_ControlResult` ASC);


-- -----------------------------------------------------
-- Table `Info`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Info` ;

CREATE TABLE IF NOT EXISTS `Info` (
  `Record` VARCHAR(32) NOT NULL,
  `Value` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`Record`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `CataloguedEvent`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CataloguedEvent` ;

CREATE TABLE IF NOT EXISTS `CataloguedEvent` (
  `IdCataloguedControl` INT NOT NULL,
  `IdClientEvent` INT NOT NULL,
  PRIMARY KEY (`IdCataloguedControl`, `IdClientEvent`),
  CONSTRAINT `fk_CataloguedControl_has_ClientEvent_CataloguedControl1`
    FOREIGN KEY (`IdCataloguedControl`)
    REFERENCES `CataloguedControl` (`IdCataloguedControl`),
  CONSTRAINT `fk_CataloguedControl_has_ClientEvent_ClientEvent1`
    FOREIGN KEY (`IdClientEvent`)
    REFERENCES `ClientEvent` (`IdClientEvent`))
ENGINE = InnoDB;

CREATE INDEX `fk_CataloguedControl_has_ClientEvent_ClientEvent1_idx` ON `CataloguedEvent` (`IdClientEvent` ASC);

CREATE INDEX `fk_CataloguedControl_has_ClientEvent_CataloguedControl1_idx` ON `CataloguedEvent` (`IdCataloguedControl` ASC);


-- -----------------------------------------------------
-- Table `CustomerComplaint`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CustomerComplaint` ;

CREATE TABLE IF NOT EXISTS `CustomerComplaint` (
  `IdComplaint` INT NOT NULL AUTO_INCREMENT,
  `FK_Client` INT NOT NULL,
  `FK_PartVersion` INT(11) NOT NULL,
  `ComplaintDate` DATETIME NOT NULL,
  `Reference` VARCHAR(50) NOT NULL,
  `Comment` VARCHAR(500) NULL,
  `FK_DefectType` INT NOT NULL,
  PRIMARY KEY (`IdComplaint`),
  CONSTRAINT `Client`
    FOREIGN KEY (`FK_Client`)
    REFERENCES `Client` (`IdClient`),
  CONSTRAINT `fk_CustomerComplaint_DefectType1`
    FOREIGN KEY (`FK_DefectType`)
    REFERENCES `DefectType` (`IdDefectType`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_CustomerComplaint_PartVersion1`
    FOREIGN KEY (`FK_PartVersion`)
    REFERENCES `PartVersion` (`IdPartVersion`));

CREATE INDEX `Client_idx` ON `CustomerComplaint` (`FK_Client` ASC);

CREATE INDEX `fk_CustomerComplaint_PartVersion1_idx` ON `CustomerComplaint` (`FK_PartVersion` ASC);

CREATE INDEX `fk_CustomerComplaint_DefectType1_idx` ON `CustomerComplaint` (`FK_DefectType` ASC);


-- -----------------------------------------------------
-- Table `CustomerComplaintDefect`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CustomerComplaintDefect` ;

CREATE TABLE IF NOT EXISTS `CustomerComplaintDefect` (
  `IdComplaintDefect` INT NOT NULL AUTO_INCREMENT,
  `FK_Complaint` INT NOT NULL,
  `X` INT NOT NULL,
  `Y` INT NOT NULL,
  `Quadrant` VARCHAR(4) NOT NULL,
  PRIMARY KEY (`IdComplaintDefect`),
  CONSTRAINT `Complaint`
    FOREIGN KEY (`FK_Complaint`)
    REFERENCES `CustomerComplaint` (`IdComplaint`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT);

CREATE INDEX `Complaint_idx` ON `CustomerComplaintDefect` (`FK_Complaint` ASC);


-- -----------------------------------------------------
-- Table `TemporaryWarning`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TemporaryWarning` ;

CREATE TABLE IF NOT EXISTS `TemporaryWarning` (
  `FK_ControlPlan` INT(11) NOT NULL,
  `Enabled` BIT NOT NULL DEFAULT b'0',
  `WarningStart` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `WarningEnd` TIMESTAMP NULL,
  PRIMARY KEY (`FK_ControlPlan`),
  CONSTRAINT `fk_TemporaryWarning_ControlPlan1`
    FOREIGN KEY (`FK_ControlPlan`)
    REFERENCES `ControlPlan` (`IdControlPlan`));

CREATE INDEX `fk_TemporaryWarning_ControlPlan1_idx` ON `TemporaryWarning` (`FK_ControlPlan` ASC);


-- -----------------------------------------------------
-- Table `PartVersionFile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PartVersionFile` ;

CREATE TABLE IF NOT EXISTS `PartVersionFile` (
  `FK_PartVersion` INT NOT NULL,
  `FK_Hash` CHAR(130) NOT NULL,
  `FK_Bucket` INT NOT NULL,
  PRIMARY KEY (`FK_PartVersion`, `FK_Hash`, `FK_Bucket`),
  CONSTRAINT `fk_PartVersion_has_File_File1`
    FOREIGN KEY (`FK_Hash` , `FK_Bucket`)
    REFERENCES `File` (`Hash` , `FK_Bucket`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_PartVersion_has_File_File1_idx` ON `PartVersionFile` (`FK_Hash` ASC, `FK_Bucket` ASC);

CREATE INDEX `fk_PartVersion_has_File_PartVersion1_idx` ON `PartVersionFile` (`FK_PartVersion` ASC);


-- -----------------------------------------------------
-- Table `ProcessVigilanceState`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProcessVigilanceState` ;

CREATE TABLE IF NOT EXISTS `ProcessVigilanceState` (
  `IdState` INT NOT NULL,
  `Name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`IdState`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `SourceMaterialType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `SourceMaterialType` ;

CREATE TABLE IF NOT EXISTS `SourceMaterialType` (
  `IdSourceMaterial` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`IdSourceMaterial`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ProcessVigilance`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProcessVigilance` ;

CREATE TABLE IF NOT EXISTS `ProcessVigilance` (
  `idProcessVigilance` INT NOT NULL,
  `FK_Bom` INT NOT NULL,
  `FK_Line` INT NOT NULL,
  `FK_State` INT NOT NULL,
  `FK_SourceMaterial` INT NOT NULL,
  `Name` VARCHAR(100) NOT NULL,
  `CostPerPart` DECIMAL(13,4) NOT NULL,
  `CHR` INT NOT NULL,
  `ProgramNumber` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`idProcessVigilance`),
  CONSTRAINT `fk_ProcessVigilance_Bom1`
    FOREIGN KEY (`FK_Bom`)
    REFERENCES `Bom` (`IdBOM`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilance_Line1`
    FOREIGN KEY (`FK_Line`)
    REFERENCES `Line` (`IdLine`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilance_ProcessVigilanceState1`
    FOREIGN KEY (`FK_State`)
    REFERENCES `ProcessVigilanceState` (`IdState`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilance_SourceMaterialType1`
    FOREIGN KEY (`FK_SourceMaterial`)
    REFERENCES `SourceMaterialType` (`IdSourceMaterial`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ProcessVigilance_Bom1_idx` ON `ProcessVigilance` (`FK_Bom` ASC);

CREATE INDEX `fk_ProcessVigilance_Line1_idx` ON `ProcessVigilance` (`FK_Line` ASC);

CREATE INDEX `fk_ProcessVigilance_ProcessVigilanceState1_idx` ON `ProcessVigilance` (`FK_State` ASC);

CREATE INDEX `fk_ProcessVigilance_SourceMaterialType1_idx` ON `ProcessVigilance` (`FK_SourceMaterial` ASC);

CREATE UNIQUE INDEX `uq_refLine` ON `ProcessVigilance` (`FK_Bom` ASC, `FK_Line` ASC);


-- -----------------------------------------------------
-- Table `ProcessVigilanceVersion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProcessVigilanceVersion` ;

CREATE TABLE IF NOT EXISTS `ProcessVigilanceVersion` (
  `IdProcessVigilanceVersion` INT NOT NULL,
  `FK_ProcessVigilance` INT NOT NULL,
  `Revision` INT NOT NULL,
  `Creator` INT NOT NULL,
  `LastModifier` INT NOT NULL,
  `State` INT(11) NOT NULL,
  `Activation` TIMESTAMP NOT NULL,
  `Deactivation` TIMESTAMP NULL,
  PRIMARY KEY (`IdProcessVigilanceVersion`),
  CONSTRAINT `fk_ProcessVigilanceVersion_ProcessVigilance1`
    FOREIGN KEY (`FK_ProcessVigilance`)
    REFERENCES `ProcessVigilance` (`idProcessVigilance`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilanceVersion_Account1`
    FOREIGN KEY (`Creator`)
    REFERENCES `Account` (`IdAccount`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilanceVersion_Account2`
    FOREIGN KEY (`LastModifier`)
    REFERENCES `Account` (`IdAccount`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ProcessVigilanceVersion_ProcessVigilance1_idx` ON `ProcessVigilanceVersion` (`FK_ProcessVigilance` ASC);

CREATE INDEX `fk_ProcessVigilanceVersion_Account1_idx` ON `ProcessVigilanceVersion` (`Creator` ASC);

CREATE INDEX `fk_ProcessVigilanceVersion_Account2_idx` ON `ProcessVigilanceVersion` (`LastModifier` ASC);


-- -----------------------------------------------------
-- Table `PsaShift`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PsaShift` ;

CREATE TABLE IF NOT EXISTS `PsaShift` (
  `idPsaShift` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(30) NOT NULL,
  `Active` BIT(1) NOT NULL,
  PRIMARY KEY (`idPsaShift`))
ENGINE = InnoDB
COMMENT = ' ';


-- -----------------------------------------------------
-- Table `ParameterType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ParameterType` ;

CREATE TABLE IF NOT EXISTS `ParameterType` (
  `IdParameterType` INT NOT NULL,
  `Name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`IdParameterType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Parameter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Parameter` ;

CREATE TABLE IF NOT EXISTS `Parameter` (
  `IdParameter` INT NOT NULL,
  `FK_ParameterType` INT NOT NULL,
  `Name` VARCHAR(70) NOT NULL,
  `HasPoints` BIT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`IdParameter`),
  CONSTRAINT `fk_Parameter_ParameterType1`
    FOREIGN KEY (`FK_ParameterType`)
    REFERENCES `ParameterType` (`IdParameterType`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_Parameter_ParameterType1_idx` ON `Parameter` (`FK_ParameterType` ASC);


-- -----------------------------------------------------
-- Table `LineTypeParameter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LineTypeParameter` ;

CREATE TABLE IF NOT EXISTS `LineTypeParameter` (
  `IdLineType` INT NOT NULL,
  `IdParameter` INT NOT NULL,
  `Points` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`IdLineType`, `IdParameter`),
  CONSTRAINT `fk_LineTypeParameter_Parameter1`
    FOREIGN KEY (`IdParameter`)
    REFERENCES `Parameter` (`IdParameter`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_LineTypeParameter_LineType1`
    FOREIGN KEY (`IdLineType`)
    REFERENCES `LineType` (`IdLineType`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_LineTypeParameter_Parameter1_idx` ON `LineTypeParameter` (`IdParameter` ASC);


-- -----------------------------------------------------
-- Table `ProcessVigilanceVersionParameter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProcessVigilanceVersionParameter` ;

CREATE TABLE IF NOT EXISTS `ProcessVigilanceVersionParameter` (
  `IdConfiguredParameter` INT NOT NULL AUTO_INCREMENT,
  `IdProcessVigilanceVersion` INT NOT NULL,
  `IdParameter` INT NOT NULL,
  `Point` INT NOT NULL DEFAULT 1,
  `Nominal` FLOAT NOT NULL DEFAULT 0,
  `BooleanNominal` BIT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`IdConfiguredParameter`),
  CONSTRAINT `fk_ProcessVigilanceVersion_has_Parameter_ProcessVigilanceVers1`
    FOREIGN KEY (`IdProcessVigilanceVersion`)
    REFERENCES `ProcessVigilanceVersion` (`IdProcessVigilanceVersion`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilanceVersion_has_Parameter_Parameter1`
    FOREIGN KEY (`IdParameter`)
    REFERENCES `Parameter` (`IdParameter`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ProcessVigilanceVersion_has_Parameter_Parameter1_idx` ON `ProcessVigilanceVersionParameter` (`IdParameter` ASC);

CREATE INDEX `fk_ProcessVigilanceVersion_has_Parameter_ProcessVigilanceVe_idx` ON `ProcessVigilanceVersionParameter` (`IdProcessVigilanceVersion` ASC);


-- -----------------------------------------------------
-- Table `ProcessLaunch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProcessLaunch` ;

CREATE TABLE IF NOT EXISTS `ProcessLaunch` (
  `IdLaunch` INT NOT NULL,
  `FK_Creator` INT NOT NULL,
  `FK_ProcessVigilanceVersion` INT NOT NULL,
  `FK_PsaShift` INT NOT NULL,
  `Stamps` INT NOT NULL,
  `LaunchTime` TIMESTAMP NOT NULL,
  `ModifiesParameter` BIT(1) NOT NULL,
  PRIMARY KEY (`IdLaunch`),
  CONSTRAINT `fk_ProcessLaunch_PsaShift1`
    FOREIGN KEY (`FK_PsaShift`)
    REFERENCES `PsaShift` (`idPsaShift`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessLaunch_ProcessVigilanceVersion1`
    FOREIGN KEY (`FK_ProcessVigilanceVersion`)
    REFERENCES `ProcessVigilanceVersion` (`IdProcessVigilanceVersion`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessLaunch_Account1`
    FOREIGN KEY (`FK_Creator`)
    REFERENCES `Account` (`IdAccount`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ProcessLaunch_PsaShift1_idx` ON `ProcessLaunch` (`FK_PsaShift` ASC);

CREATE INDEX `fk_ProcessLaunch_ProcessVigilanceVersion1_idx` ON `ProcessLaunch` (`FK_ProcessVigilanceVersion` ASC);

CREATE INDEX `fk_ProcessLaunch_Account1_idx` ON `ProcessLaunch` (`FK_Creator` ASC);


-- -----------------------------------------------------
-- Table `CoilLaunch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `CoilLaunch` ;

CREATE TABLE IF NOT EXISTS `CoilLaunch` (
  `IdCoilLaunch` INT NOT NULL AUTO_INCREMENT,
  `FK_ProcessLaunch` INT NOT NULL,
  `CoilNumber` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`IdCoilLaunch`),
  CONSTRAINT `fk_CoilLaunches_ProcessLaunch1`
    FOREIGN KEY (`FK_ProcessLaunch`)
    REFERENCES `ProcessLaunch` (`IdLaunch`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_CoilLaunches_ProcessLaunch1_idx` ON `CoilLaunch` (`FK_ProcessLaunch` ASC);


-- -----------------------------------------------------
-- Table `LaunchModifiedParameter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LaunchModifiedParameter` ;

CREATE TABLE IF NOT EXISTS `LaunchModifiedParameter` (
  `IdModifiedParameter` INT NOT NULL AUTO_INCREMENT,
  `IdConfiguredParameter` INT NOT NULL,
  `IdLaunch` INT NOT NULL,
  `Value` FLOAT NOT NULL,
  `BooleanValue` BIT(1) NOT NULL,
  `Comment` VARCHAR(600) NOT NULL,
  PRIMARY KEY (`IdModifiedParameter`),
  CONSTRAINT `fk_ProcessVigilanceVersionParameter_has_ProcessLaunch_Process1`
    FOREIGN KEY (`IdConfiguredParameter`)
    REFERENCES `ProcessVigilanceVersionParameter` (`IdConfiguredParameter`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilanceVersionParameter_has_ProcessLaunch_Process2`
    FOREIGN KEY (`IdLaunch`)
    REFERENCES `ProcessLaunch` (`IdLaunch`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ProcessVigilanceVersionParameter_has_ProcessLaunch_Proce_idx` ON `LaunchModifiedParameter` (`IdLaunch` ASC);

CREATE INDEX `fk_ProcessVigilanceVersionParameter_has_ProcessLaunch_Proce_idx1` ON `LaunchModifiedParameter` (`IdConfiguredParameter` ASC);


-- -----------------------------------------------------
-- Table `DeclarationType`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DeclarationType` ;

CREATE TABLE IF NOT EXISTS `DeclarationType` (
  `IdDeclarationType` INT NOT NULL,
  `Name` VARCHAR(80) NOT NULL,
  PRIMARY KEY (`IdDeclarationType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `LaunchDeclarations`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `LaunchDeclarations` ;

CREATE TABLE IF NOT EXISTS `LaunchDeclarations` (
  `IdLaunch` INT NOT NULL,
  `IdDeclarationType` INT NOT NULL,
  `Quantity` INT NOT NULL,
  CONSTRAINT `fk_LaunchDeclarations_ProcessLaunch1`
    FOREIGN KEY (`IdLaunch`)
    REFERENCES `ProcessLaunch` (`IdLaunch`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_LaunchDeclarations_DeclarationType1`
    FOREIGN KEY (`IdDeclarationType`)
    REFERENCES `DeclarationType` (`IdDeclarationType`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_LaunchDeclarations_ProcessLaunch1_idx` ON `LaunchDeclarations` (`IdLaunch` ASC);

CREATE INDEX `fk_LaunchDeclarations_DeclarationType1_idx` ON `LaunchDeclarations` (`IdDeclarationType` ASC);


-- -----------------------------------------------------
-- Table `ProcessVigilanceWarning`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ProcessVigilanceWarning` ;

CREATE TABLE IF NOT EXISTS `ProcessVigilanceWarning` (
  `IdWarning` INT NOT NULL,
  `FK_OffendingParameter` INT NOT NULL,
  `FK_Validator` INT NULL,
  `Validation` TIMESTAMP NULL,
  PRIMARY KEY (`IdWarning`),
  CONSTRAINT `fk_ProcessVigilanceWarning_Account1`
    FOREIGN KEY (`FK_Validator`)
    REFERENCES `Account` (`IdAccount`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ProcessVigilanceWarning_ProcessVigilanceVersionParameter1`
    FOREIGN KEY (`FK_OffendingParameter`)
    REFERENCES `ProcessVigilanceVersionParameter` (`IdConfiguredParameter`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ProcessVigilanceWarning_Account1_idx` ON `ProcessVigilanceWarning` (`FK_Validator` ASC);

CREATE INDEX `fk_ProcessVigilanceWarning_ProcessVigilanceVersionParameter_idx` ON `ProcessVigilanceWarning` (`FK_OffendingParameter` ASC);


-- -----------------------------------------------------
-- Table `WarningModifiedValues`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `WarningModifiedValues` ;

CREATE TABLE IF NOT EXISTS `WarningModifiedValues` (
  `IdWarning` INT NOT NULL,
  `IdModifiedParameter` INT NOT NULL,
  PRIMARY KEY (`IdWarning`, `IdModifiedParameter`),
  CONSTRAINT `fk_LaunchModifiedParameter_has_ProcessVigilanceWarning_Launch1`
    FOREIGN KEY (`IdModifiedParameter`)
    REFERENCES `LaunchModifiedParameter` (`IdModifiedParameter`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_LaunchModifiedParameter_has_ProcessVigilanceWarning_Proces1`
    FOREIGN KEY (`IdWarning`)
    REFERENCES `ProcessVigilanceWarning` (`IdWarning`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_LaunchModifiedParameter_has_ProcessVigilanceWarning_Proc_idx` ON `WarningModifiedValues` (`IdWarning` ASC);

CREATE INDEX `fk_LaunchModifiedParameter_has_ProcessVigilanceWarning_Laun_idx` ON `WarningModifiedValues` (`IdModifiedParameter` ASC);


-- -----------------------------------------------------
-- Table `ReworkBatch`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ReworkBatch` ;

CREATE TABLE IF NOT EXISTS `ReworkBatch` (
  `IdReworkSession` INT NOT NULL,
  `FK_PsaShift` INT NOT NULL,
  `FK_Line` INT NOT NULL,
  `FK_Reference` INT NOT NULL,
  `BatchDate` DATE NOT NULL,
  `ProductionDate` DATE NOT NULL,
  `ReworkerRef` VARCHAR(25) NOT NULL,
  `ReworkedParts` INT NOT NULL,
  `NokParts` INT NOT NULL,
  `BadSrcParts` INT NOT NULL,
  `Time` INT NOT NULL,
  `Comment` VARCHAR(600) NOT NULL,
  PRIMARY KEY (`IdReworkSession`),
  CONSTRAINT `fk_ReworkBatch_Line1`
    FOREIGN KEY (`FK_Line`)
    REFERENCES `Line` (`IdLine`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ReworkBatch_PsaShift1`
    FOREIGN KEY (`FK_PsaShift`)
    REFERENCES `PsaShift` (`idPsaShift`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_ReworkBatch_Part1`
    FOREIGN KEY (`FK_Reference`)
    REFERENCES `Part` (`IdPart`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_ReworkBatch_Line1_idx` ON `ReworkBatch` (`FK_Line` ASC);

CREATE INDEX `fk_ReworkBatch_PsaShift1_idx` ON `ReworkBatch` (`FK_PsaShift` ASC);

CREATE INDEX `fk_ReworkBatch_Part1_idx` ON `ReworkBatch` (`FK_Reference` ASC);


